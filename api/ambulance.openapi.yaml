openapi: 3.0.0
servers:
  - description: API Endpoint
    url: /api
info:
  description: Patient and Illness Management API
  version: "1.0.0"
  title: Patient and Illness Management API
  contact:
    email: support@example.com
  license:
    name: CC BY 4.0
    url: "https://creativecommons.org/licenses/by/4.0/"
tags:
- name: patients
  description: Patient management API
- name: illnesses
  description: Patient illness and treatment management
- name: treatments
  description: Treatment management API
- name: medications
  description: Patient medication management API

paths:
  "/patients":
    get:
      tags:
        - patients
      summary: Get all patients or filter by name
      operationId: getPatients
      description: Retrieves a list of all patients in the system. Optionally filter by name.
      parameters:
        - name: name
          in: query
          description: Optional name to filter patients by
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Patient"
              examples:
                response:
                  $ref: "#/components/examples/PatientsListExample"
    post:
      tags:
        - patients
      summary: Create a new patient
      operationId: createPatient
      description: Use this method to add a new patient to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
            examples:
              request-sample:
                $ref: "#/components/examples/PatientExample"
        description: Patient details to store
        required: true
      responses:
        "201":
          description: Successfully created patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
              examples:
                updated-response:
                  $ref: "#/components/examples/PatientExample"
        "400":
          description: Missing mandatory properties of input object
        "409":
          description: Patient with the specified name already exists
    delete:
      tags:
        - patients
      summary: Delete a patient
      operationId: deletePatient
      description: Use this method to delete an existing patient
      parameters:
        - name: name
          in: query
          description: The name of the patient to be deleted
          required: true
          schema:
            type: string
      responses:
        "204":
          description: successfully deleted the patient
  "/patients/{patientId}/illnesses":
    get:
      tags:
        - illnesses
      summary: Get illnesses for a specific patient
      operationId: getPatientIllnesses
      description: Retrieves all illness records for a specific patient
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of patient's illnesses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Illness"
              examples:
                response:
                  $ref: "#/components/examples/IllnessesListExample"
        "404":
          description: Patient with specified ID does not exist
    patch:
      tags:
        - illnesses
      summary: Update sick leave end date
      operationId: updateSickLeaveEndDate
      description: Updates the sl-until field of a specific illness record
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sl_until
              properties:
                sl_until:
                  type: string
                  format: date
                  example: "2025-05-01"
            examples:
              request-sample:
                value:
                  sl_until: "2025-05-01"
        description: New sick leave end date
        required: true
      responses:
        "200":
          description: Successfully updated illness record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Illness"
              examples:
                updated-response:
                  $ref: "#/components/examples/IllnessExample"
        "400":
          description: Missing or invalid sick leave end date
        "404":
          description: Patient or illness with specified ID does not exist
    post:
      tags:
        - illnesses
      summary: Create a new illness record
      operationId: createIllness
      description: Use this method to add a new illness record to the system
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Illness"
            examples:
              request-sample:
                $ref: "#/components/examples/IllnessExample"
        description: Illness details to store
        required: true
      responses:
        "201":
          description: Successfully created illness record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Illness"
              examples:
                updated-response:
                  $ref: "#/components/examples/IllnessExample"
        "400":
          description: Missing mandatory properties of input object
        "409":
          description: Illness with the specified id already exists
    delete:
      tags:
        - illnesses
      summary: Delete illness record
      operationId: deleteIllness
      description: Deletes a specific illness record for a patient
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
        - in: query
          name: illness_id
          description: ID of the illness record
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successfully deleted illness record
        "404":
          description: Patient or illness with specified ID does not exist
  "/patients/{patientId}/illnesses/{illnessId}/treatments":
    post:
      tags:
        - treatments
      summary: Create a new treatment for an illness
      description: Adds a new treatment to a specific illness for the given patient.
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
        - name: illnessId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - start
                - end
              properties:
                name:
                  type: string
                description:
                  type: string
                start:
                  type: string
                end:
                  type: string
      responses:
        "201":
          description: Treatment created successfully
        "400":
          description: Bad request
        "404":
          description: Illness or patient not found
        "500":
          description: Internal server error
    get:
      tags:
        - treatments
      summary: Get treatments for a patient's illness
      description: Retrieves all treatments associated with a specific illness of a patient.
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
        - name: illnessId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Treatments retrieved successfully
        "404":
          description: Patient or illness not found
        "500":
          description: Internal server error
  "/patients/{patientId}/illnesses/{illnessId}/treatments/{treatmentId}":
    patch:
      tags:
        - treatments
      summary: Update a treatment
      description: Updates an existing treatment for a specific illness of a patient.
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
        - name: illnessId
          in: path
          required: true
          schema:
            type: string
        - name: treatmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
                - description
                - start
                - end
              properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                start:
                  type: string
                end:
                  type: string
      responses:
        "200":
          description: Treatment updated successfully
        "400":
          description: Bad request
        "404":
          description: Patient, patient's illness or patient's treatment not found
        "500":
          description: Internal server error
    delete:
      tags:
        - treatments
      summary: Delete a treatment
      description: Deletes a treatment from a specific illness of a patient.
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
        - name: illnessId
          in: path
          required: true
          schema:
            type: string
        - name: treatmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Treatment deleted successfully
        "404":
          description: Invalid patientId, illnessId or treatmentId
        "500":
          description: Internal server error
  "/patients/{patientId}/medications":
    get:
      tags:
        - medications
      summary: Get medications for a specific patient
      operationId: getPatientMedications
      description: Retrieves all medication records for a specific patient
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of patient's medications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Medication"
              examples:
                response:
                  $ref: "#/components/examples/MedicationsListExample"
        "404":
          description: Patient with specified ID does not exist
    post:
      tags:
        - medications
      summary: Create a new medication record
      operationId: createMedication
      description: Use this method to add a new medication record to the system
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medication"
            examples:
              request-sample:
                $ref: "#/components/examples/MedicationExample"
        description: Medication details to store
        required: true
      responses:
        "201":
          description: Successfully created medication record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medication"
              examples:
                updated-response:
                  $ref: "#/components/examples/MedicationExample"
        "400":
          description: Missing mandatory properties of input object
        "409":
          description: Medication with the specified id already exists
    delete:
      tags:
        - medications
      summary: Delete medication record
      operationId: deleteMedication
      description: Deletes a specific medication record for a patient
      parameters:
        - in: path
          name: patientId
          description: ID of the patient
          required: true
          schema:
            type: string
        - in: query
          name: medication_id
          description: ID of the medication record
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successfully deleted medication record
        "404":
          description: Patient or medication with specified ID does not exist
  "/patients/{patientId}/medications/{medicationId}":
    patch:
      tags:
        - medications
      summary: Update a medication record
      operationId: updateMedication
      description: Updates an existing medication record for a patient
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
        - name: medicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medication"
            examples:
              request-sample:
                $ref: "#/components/examples/MedicationExample"
      responses:
        "200":
          description: Medication updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medication"
        "400":
          description: Bad request
        "404":
          description: Patient or medication not found
        "500":
          description: Internal server error

components:
  schemas:
    Patient:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          example: "P-123"
          description: Unique identifier for the patient
        name:
          type: string
          example: "John Doe"
          description: Patient's full name
        illnesses:
          type: array
          description: List of patient's illnesses, initialized as empty array on creation
          items:
            $ref: "#/components/schemas/Illness"
          default: []
      example:
        $ref: "#/components/examples/PatientExample/value"

    Illness:
      type: object
      required: [id, diagnosis, sl_from, sl_until]
      properties:
        id:
          type: string
          example: "illness-456"
          description: Unique identifier for the illness record
        diagnosis:
          type: string
          example: "Influenza"
          description: Medical diagnosis
        sl_from:
          type: string
          format: date
          example: "2025-04-10"
          description: Start date of sick leave
        sl_until:
          type: string
          format: date
          example: "2025-04-20"
          description: End date of sick leave
        treatments:
          type: array
          description: List of treatments related to this illness
          items:
            $ref: "#/components/schemas/Treatment"
          default: []
      example:
        $ref: "#/components/examples/IllnessExample/value"

    Treatment:
      type: object
      required: [id, name, description, startDate, endDate]
      properties:
        id:
          type: string
          example: "treatment-001"
          description: Unique identifier for the treatment
        name:
          type: string
          example: "test1"
          description: Name of the treatment
        description:
          type: string
          example: "Prescribed antibiotics for 7 days"
          description: Description of the treatment
        startDate:
          type: string
          format: date
          example: "2025-04-11"
          description: Date when the treatment started
        endDate:
          type: string
          format: date
          example: "2025-04-12"
          description: Date when the treatment ended
      example:
        $ref: "#/components/examples/TreatmentExample/value"

    Medication:
      type: object
      required: [id, name, sideEffects]
      properties:
        id:
          type: string
          example: "medication-001"
          description: Unique identifier for the medication record
        name:
          type: string
          example: "Aspirin"
          description: Name of the medication
        sideEffects:
          type: string
          example: "Nausea, stomach pain, heartburn"
          description: Potential side effects of the medication
      example:
        $ref: "#/components/examples/MedicationExample/value"

  examples:
    PatientExample:
      summary: Sample patient
      description: Example of a patient in the system
      value:
        id: "patient-123"
        name: "John Doe"

    PatientsListExample:
      summary: List of patients
      description: Example list of patients in the system
      value:
        - id: "patient-123"
          name: "John Doe"
        - id: "patient-456"
          name: "Jane Smith"

    IllnessExample:
      summary: Sample illness record
      description: Example of an illness record in the system
      value:
        id: "illness-456"
        diagnosis: "Influenza"
        sl_from: "2025-04-10"
        sl_until: "2025-04-20"
        treatments: []

    IllnessesListExample:
      summary: List of illness records
      description: Example list of illness records in the system
      value:
        - id: "illness-456"
          diagnosis: "Influenza"
          sl_from: "2025-04-10"
          sl_until: "2025-04-20"
          treatments: []
        - id: "illness-789"
          diagnosis: "Lower back pain"
          sl_from: "2025-03-01"
          sl_until: "2025-03-10"
          treatments: []

    TreatmentExample:
      summary: Example treatment
      description: A sample treatment given for an illness
      value:
        id: "treatment-001"
        name: "Test1"
        description: "Prescribed antibiotics for 7 days"
        startDate: "2025-04-11"
        endDate: "2025-04-12"

    TreatmentsListExample:
      summary: List of treatments
      description: Example list of treatments for an illness
      value:
        - id: "treatment-001"
          name: "Test1"
          description: "Prescribed antibiotics for 7 days"
          startDate: "2025-04-11"
          endDate: "2025-04-12"
        - id: "treatment-002"
          name: "Test2"
          description: "Physical therapy session"
          startDate: "2025-04-15"
          endDate: "2025-04-16"

    MedicationExample:
      summary: Sample medication record
      description: Example of a medication record in the system
      value:
        id: "medication-001"
        name: "Aspirin"
        sideEffects: "Nausea, stomach pain, heartburn"

    MedicationsListExample:
      summary: List of medication records
      description: Example list of medication records in the system
      value:
        - id: "medication-001"
          name: "Aspirin"
          sideEffects: "Nausea, stomach pain, heartburn"
        - id: "medication-002"
          name: "Ibuprofen"
          sideEffects: "Upset stomach, dizziness, headache"